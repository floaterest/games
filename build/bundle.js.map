{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/constants.ts","../../node_modules/@floaterest/sv/src/NavItem.svelte","../../node_modules/@floaterest/sv/src/Nav.svelte","../../node_modules/@floaterest/sv/src/JSObject.svelte","../../node_modules/@floaterest/sv/src/LocalStorage.svelte","../../src/minefield.ts","../../src/queue.ts","../../src/Minesweeper.svelte","../../src/Games.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","const material = (id) => `<span class=\"material-icons\">${id}</span>`;\nconst bootstrap = (id) => `<i class=\"bi bi-${id}\"></i>`;\nexport const config = {\n    key: 'games',\n    storage: {\n        Minesweeper: {\n            width: 10,\n            height: 10,\n            density: 10,\n        },\n        Arithmetic: {\n            amin: 100,\n            amax: 1000,\n            bmin: 100,\n            bmax: 1000,\n            op: '+-*/',\n        }\n    }\n};\nexport const navs = {\n    top: {\n        Games: {\n            icon: material('sports_esports'),\n            swap: true,\n            style: 'color: var(--accent)',\n            href: '/',\n        },\n        Minesweeper: {\n            icon: material('settings_applications')\n        },\n        Arithmetic: {\n            icon: material('calculate')\n        },\n        Flip: {\n            icon: material('flip')\n        },\n    },\n    bottom: {\n        Settings: {\n            icon: material('storage')\n        },\n        GitHub: {\n            icon: bootstrap('github'),\n            href: 'https://github.com/Floaterest/'\n        }\n    }\n};\n","<script lang=\"ts\">\r\n\texport let key: string;\r\n\texport let icon = '';\r\n\texport let href = '';\r\n\texport let swap = false;\r\n\texport let selected = false;\r\n</script>\r\n\r\n{#if href}\r\n    <a class:selected class:swap {href} on:click\r\n       class=\"{$$props.class}\" style=\"{$$props.style}\">\r\n        {#if icon}\r\n            {@html icon}\r\n        {:else}\r\n            <slot/>\r\n        {/if}\r\n        <span class=\"text\">{key}</span>\r\n    </a>\r\n{:else}\r\n    <div class:selected class:swap on:click\r\n         class=\"{$$props.class}\" style=\"{$$props.style}\">\r\n        {#if icon}\r\n            {@html icon}\r\n        {:else}\r\n            <slot/>\r\n        {/if}\r\n        <span class=\"text\">{key}</span>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    div, a{\r\n        user-select: none;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 0 var(--nav-padding);\r\n        gap: var(--nav-padding);\r\n    }\r\n\r\n    div:hover, a:hover, .selected{\r\n        box-shadow: inset 2px 0 0 0 currentColor;\r\n    }\r\n\r\n    .swap{\r\n        direction: rtl;\r\n    }\r\n</style>\r\n\r\n","<script lang=\"ts\">\n\timport NavItem from './NavItem.svelte';\n\n\ttype NavProp = {\n\t\t// html element\n\t\ticon?: string,\n\t\thref?: string,\n\t\tlast?: boolean,\n\t\tswap?: boolean,\n\t\tselected?: boolean,\n\t}\n\n\texport let top: { [id: string]: NavProp } = {};\n\texport let bottom: { [id: string]: NavProp } = {};\n\texport let selected: string;\n\n\t[top, bottom].forEach(items => Object.values(items).forEach(item => item.selected = false));\n\n\tfunction topClick(key: string){\n\t\tselected = key;\n\t\tObject.keys(top).forEach(k => top[k].selected = k == key);\n\t\tObject.keys(bottom).forEach(k => bottom[k].selected = false);\n\t}\n\n\tfunction bottomClick(key: string){\n\t\tselected = key;\n\t\tObject.keys(top).forEach(k => top[k].selected = false);\n\t\tObject.keys(bottom).forEach(k => bottom[k].selected = k == key);\n\t}\n</script>\n\n<nav>\n    <div class=\"top\">\n        {#each Object.entries(top) as [key, value]}\n            <NavItem {...value} {key} on:click=\"{()=>topClick(key)}\"/>\n        {/each}\n    </div>\n    <div class=\"bottom\">\n        {#each Object.entries(bottom) as [key, value]}\n            <NavItem {...value} {key} on:click={()=>bottomClick(key)}/>\n        {/each}\n    </div>\n</nav>\n\n<style lang=\"sass\">\n    @use 'styles/icons'\n    @use 'styles/colors'\n\n    $pad: 0.25em\n    $width: calc($pad * 2 + icons.$icon-size)\n    :global(body)\n        margin: 0 0 0 $width\n        background: colors.$darkest !important\n\n    nav\n        height: 100%\n        background: colors.$black\n        white-space: nowrap\n\n        position: fixed\n        top: 0\n        left: 0\n        width: $width\n\n        display: flex\n        flex-direction: column\n        gap: $pad\n\n        &:hover\n            width: unset\n            :global(.text)\n                display: inline\n        :global(.text)\n            display: none\n\n        .top > :global(*:first-child)\n            padding-top: $pad\n\n        .bottom\n            margin-top: auto\n\n            & > :global(*:last-child)\n                padding-bottom: $pad\n\n    .top, .bottom\n        & > :global(div), :global(a)\n            user-select: none\n            cursor: pointer\n            display: flex\n            align-items: center\n            padding: 0 $pad\n            gap: $pad\n</style>","<script lang=\"ts\">\r\n\texport let input = false;\r\n\texport let object: any;\r\n\texport let indent: number = 0;\r\n\texport let tabwidth: number;\r\n\r\n\tconst type = typeof object;\r\n\t// nbsp\r\n\tconst tab = Array((indent++ * tabwidth)).join('\\u00a0');\r\n</script>\r\n\r\n{#if type === 'object'}\r\n    {#if object instanceof Array}\r\n        {#each object.map((v, i) => [typeof v !== 'object', i]) as [input, i]}\r\n            <div>{tab}\r\n                <span class=\"punctuation\">-</span>\r\n                <svelte:self bind:object=\"{object[i]}\"\r\n                             {indent} {input} {tabwidth}/>\r\n            </div>\r\n        {/each}\r\n    {:else if object instanceof Object}\r\n        {#each Object.entries(object).map(([k, v]) => [k, typeof v !== 'object']) as [key, input]}\r\n            <div>{tab}\r\n                <svelte:self object=\"{key}\" class=\"keyword\" {indent}\r\n                             {tabwidth}/><!--\r\n                --><span class=\"punctuation\">:</span><!--\r\n                indent if value is object -->\r\n                <svelte:self bind:object=\"{object[key]}\" {tabwidth}\r\n                             indent=\"{(!input)*indent}\" {input}/>\r\n            </div>\r\n        {/each}\r\n    {/if}\r\n{:else if input}\r\n    {#if type === 'number'}\r\n        <input type=\"number\" class=\"number\" bind:value=\"{object}\">\r\n    {:else}\r\n        <input class=\"{type}\" bind:value=\"{object}\">\r\n    {/if}\r\n{:else}\r\n    {#if $$props.class}\r\n        <span class=\"{$$props.class}\">{object}</span>\r\n    {:else}\r\n        <span class=\"{type}\">{object}</span>\r\n    {/if}\r\n{/if}\r\n","<script lang=\"ts\">\r\n\timport JSObject from './JSObject.svelte';\r\n\r\n\texport let key: string;\r\n\texport let tabwidth = 2;\r\n\texport let storage: { [key: string]: any };\r\n\r\n\tconst { localStorage } = window;\r\n\r\n\tif(!(key in localStorage)) localStorage.setItem(key, JSON.stringify(storage));\r\n\tstorage = JSON.parse(localStorage.getItem(key));\r\n\r\n\t$: window.localStorage.setItem(key, JSON.stringify(storage));\r\n</script>\r\n\r\n<div class=\"{$$props.class}\" style=\"{$$props.style}\">\r\n    <JSObject bind:object=\"{storage}\" {tabwidth}/>\r\n</div>\r\n\r\n<style lang=\"sass\">\r\n    @use 'styles/yaml'\r\n    *\r\n        user-select: none\r\n\r\n</style>\r\n","/**\n * adjacent empty mine flag open\n *   000     0    0    0    0\n */\nexport var Tile;\n(function (Tile) {\n    Tile[Tile[\"Opened\"] = 1] = \"Opened\";\n    Tile[Tile[\"Flagged\"] = 2] = \"Flagged\";\n    Tile[Tile[\"Mine\"] = 4] = \"Mine\";\n    /**\n     * has no mine around\n     */\n    Tile[Tile[\"Empty\"] = 8] = \"Empty\";\n    Tile[Tile[\"Adjacent\"] = 16] = \"Adjacent\";\n})(Tile || (Tile = {}));\nexport const totile = (t) => ({\n    opened: t & Tile.Opened,\n    flagged: t & Tile.Flagged,\n    mine: t & Tile.Mine,\n    empty: t & Tile.Empty,\n    adjacent: ((t / Tile.Adjacent) | 0) + 1,\n});\n/**\n * shuffle LAST n items in a using Fisher-Yates shuffle algorithm\n * https://bost.ocks.org/mike/shuffle/\n * @param a\n * @param n\n */\nfunction shuffle(a, n) {\n    let len = a.length, i;\n    while (n--) {\n        // pick a remaining element and swap them\n        i = Math.floor(Math.random() * len--);\n        [a[i], a[len]] = [a[len], a[i]];\n    }\n}\nexport class Minefield {\n    constructor(w, h, d) {\n        // number of non-mines\n        this.count = 0;\n        this.dead = false;\n        this.won = false;\n        // avoid invalid density\n        d = Math.abs(d % 100);\n        [this.width, this.height, this.density] = [w, h, d];\n        this.delta = [-w - 1, -w, -w + 1, -1, 1, w - 1, w, w + 1];\n        // init empty field\n        this.field = Array(this.width * this.height).fill(0);\n    }\n    /**\n     * get adjacent tiles\n     */\n    adjacent(at, cond) {\n        let t;\n        return this.delta.map(d => at + d).filter(i => {\n            // if at is (0, y) and delta is going left\n            if (at % this.width == 0 && i % this.width == this.width - 1)\n                return false;\n            // if at is (width - 1, y) and delta is going right\n            if (at % this.width == this.width - 1 && i % this.width == 0)\n                return false;\n            return (t = this.field[i]) !== undefined && cond(t, i);\n        });\n    }\n    /**\n     * generate mines at index\n     * @param at start position\n     * @return number of non-mine tiles\n     */\n    generate(at) {\n        const n = ((this.width * this.height - 9) * this.density / 100) | 0;\n        // generate indices expect the 3x3 at clicked index\n        const safe = new Set([\n            at,\n            ...this.delta.map(d => at + d)\n        ]);\n        // generate potential mine coords\n        const indices = [...Array(this.width * this.height).keys()].filter(i => !safe.has(i));\n        shuffle(indices, n);\n        const mines = new Set(indices.slice(indices.length - n));\n        // set mines\n        this.field.forEach((_, i) => this.field[i] |= +mines.has(i) * Tile.Mine);\n        // count adjacent mines\n        let adj;\n        this.field.forEach((tile, i) => {\n            if (tile & Tile.Mine)\n                return;\n            if ((adj = this.adjacent(i, (t, _) => t & Tile.Mine).length)) {\n                // console.log(adj, ((adj - 1) * Tile.Adjacent).toString(2));\n                this.field[i] |= (adj - 1) * Tile.Adjacent;\n            }\n            else {\n                this.field[i] |= Tile.Empty;\n            }\n        });\n        return this.width * this.height - n;\n    }\n}\n","/**\n * https://stackoverflow.com/a/30015136\n */\nexport class Queue {\n    constructor(...items) {\n        this.stack1 = [];\n        this.stack2 = [];\n        this.stack1 = items;\n    }\n    move2stack2() {\n        while (this.stack1.length) {\n            this.stack2.push(this.stack1.pop());\n        }\n    }\n    push(item) {\n        this.stack1.push(item);\n    }\n    shift() {\n        if (!this.stack2.length)\n            this.move2stack2();\n        return this.stack2.length ? this.stack2.pop() : null;\n    }\n    get length() {\n        return this.stack1.length + this.stack2.length;\n    }\n}\n","<script lang=\"ts\">\n\timport { Minefield, Tile, totile } from './minefield';\n\timport { Queue } from './queue';\n\n\texport let width;\n\texport let height;\n\texport let density;\n\n\tlet f = new Minefield(width, height, density);\n\tconst row = [...Array(height)];\n\tconst col = [...Array(width)];\n\n\tasync function open(at: number){\n\t\t// do nothing if game over or already open\n\t\tif(f.dead || f.won || f.field[at] & Tile.Opened) return;\n\t\t// generate mines if not yet\n\t\tif(!f.count) f.count = f.generate(at);\n\n\t\t// bfs\n\t\tconst queue = new Queue<number[]>([at]);\n\t\tconst v = new Set([at]);\n\t\tlet tile: number, q2: number[];\n\t\twhile(queue.length){\n\t\t\tawait new Promise(r => setTimeout(r, 5));\n\t\t\tq2 = [];\n\t\t\tfor(at of queue.shift()!){\n\t\t\t\ttile = f.field[at];\n\t\t\t\t// open tile\n\t\t\t\tf.field[at] |= Tile.Opened;\n\t\t\t\tv.delete(at);\n\t\t\t\t// if touches mine\n\t\t\t\tif(tile & Tile.Mine){\n\t\t\t\t\tf.dead = true;\n\t\t\t\t\t// open all tiles\n\t\t\t\t\treturn f.field.forEach((_, i) => f.field[i] |= Tile.Opened);\n\t\t\t\t}\n\n\t\t\t\t// remove flag\n\t\t\t\tf.field[at] &= ~Tile.Flagged;\n\t\t\t\t// if all non-mine tiles are opened\n\t\t\t\tif(!--f.count){\n\t\t\t\t\tconsole.log('won');\n\t\t\t\t\treturn f.won = true;\n\t\t\t\t}\n\t\t\t\t// if no adjacent mines\n\t\t\t\tif(tile & Tile.Empty){\n\t\t\t\t\tfor(const i of f.adjacent(at, (t, i) => !(v.has(i) || t & (Tile.Opened | Tile.Flagged)))){\n\t\t\t\t\t\tq2.push(i);\n\t\t\t\t\t\tv.add(i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(q2.length) queue.push(q2);\n\t\t}\n\t}\n\n</script>\n<svelte:head>\n    <title>Minesweeper</title>\n</svelte:head>\n\n<div id=\"field\">\n    {#each (i => row.map(_ => col.map(_ => ({ i, ...totile(f.field[i++]) }))))(0) as r}\n        <div class=\"row\">\n            {#each r as { opened, flagged, empty, adjacent, mine, i }}\n                <code class=\"tile\" on:click={()=>open(i)}\n                      class:mine class:opened class:flagged>\n                    {empty ? '' : adjacent}\n                </code>\n            {/each}\n        </div>\n    {/each}\n</div>\n\n<style lang=\"sass\">\n    @use '../node_modules/@floaterest/sv/src/styles/icons'\n    @use '../node_modules/@floaterest/sv/src/styles/colors'\n    #field\n        border: var(--accent) 1px solid\n        display: inline-flex\n        flex-direction: column\n\n    .row\n        display: inherit\n\n    .tile\n        user-select: none\n        width: icons.$icon-size\n        height: icons.$icon-size\n        transition: background-color 750ms ease-out\n\n        display: flex\n        justify-content: center\n        align-items: center\n\n        &.mine.opened\n            color: colors.$pink\n            background-color: colors.$pink\n\n        &:not(.opened):not(.flagged)\n            background-color: var(--accent)\n            color: var(--accent)\n</style>\n","<p>Hi there</p>","<script lang=\"ts\">\n\timport { config, navs } from './constants';\n\n\timport { LocalStorage as Settings, Nav } from '@floaterest/sv';\n\timport Minesweeper from './Minesweeper.svelte';\n\timport Games from './Games.svelte';\n\n\tconst components = {\n\t\tMinesweeper,\n\t\tGames,\n\t\tSettings,\n\t};\n\n\tlet selected = components[0];\n\n\tif(!(config.key in localStorage)){\n\t\tlocalStorage.setItem(config.key, JSON.stringify(config.storage));\n\t}\n\n\tfunction props(s: string){\n\t\tif(s === 'Settings'){\n\t\t\treturn { ...config, style: 'font-family: consolas, monospace;' };\n\t\t}else{\n\t\t\treturn JSON.parse(localStorage.getItem(config.key))[selected];\n\t\t}\n\t}\n\n\tconsole.log(navs);\n</script>\n\n<Nav {...navs} bind:selected/>\n<svelte:component {...props(selected)} this=\"{components[selected]}\"/>\n\n<style lang=\"sass\">\n    @use '../node_modules/@floaterest/sv/src/styles/icons'\n    @use '../node_modules/@floaterest/sv/src/styles/html'\n</style>\n","import App from './App.svelte';\nconst app = new App({ target: document.body });\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","HtmlTag","constructor","is_svg","this","e","n","c","html","h","m","nodeName","createElementNS","t","innerHTML","Array","from","childNodes","current_component","set_current_component","component","bubble","callbacks","$$","type","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","key","get_spread_object","spread_props","bind","index","bound","create_component","mount_component","customElement","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","material","id","config","storage","Minesweeper","width","height","density","Arithmetic","amin","amax","bmin","bmax","op","navs","top","Games","icon","swap","style","href","Flip","bottom","Settings","GitHub","div","div_class_value","class","div_style_value","span","current","a_class_value","a_style_value","selected","entries","nav","div0","div1","each_blocks_1","each_blocks","topClick","$$invalidate","bottomClick","items","values","item","span_class_value","create_if_block_4","input_1","each_value_1","func_1","each_value","func","indent","jsobject1_props","object","jsobject1_changes","jsobject_props","jsobject_changes","v","tabwidth","tab","join","$$self","localStorage","window","setItem","JSON","stringify","parse","getItem","Tile","Minefield","w","count","dead","won","abs","delta","field","adjacent","at","cond","generate","safe","indices","floor","random","shuffle","mines","adj","_","Mine","tile","Adjacent","Empty","Queue","stack1","stack2","move2stack2","shift","code","t_value","f","row","col","async","open","Opened","queue","q2","setTimeout","Flagged","console","log","opened","flagged","mine","switch_instance_spread_levels","switch_value","components","s","body"],"mappings":"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"}